# TODO: Use Secrets to store the passwords to all containers.
# TODO: Monitor and update to latest version.
# TODO: Implement SSL encryption for the connection. Help here: https://stackoverflow.com/questions/60253058/how-to-set-up-a-docker-redis-container-with-ssl.
# TODO: Enable memory overcommit.
version: "3.9"

networks:
  internal:
    name: "internal"
    # External means the container will be accessible from other containers in the same local network.
    # If you want to isolate the container create a new network, with different name for each container and without being external.
    external: true

volumes:
  redis:
    name: "redis"

services:
  redis:
    image: "redis:7.2"
    container_name: "redis"
    # Explaination of the command:
    # --appendonly yes: This enables AOF persistence, which logs every write operation. It offers a better durability guarantee compared to RDB alone, as you can survive crashes with minimal data loss.
    # --auto-aof-rewrite-min-size: The minimum size of the AOF file before Redis will consider rewriting it. This is useful to prevent Redis from rewriting the AOF file too often.
    # --auto-aof-rewrite-percentage: Redis will check the size of the AOF file every minute. If the AOF file grew by more than the percentage since the last rewrite and the AOF file is at least equal to --auto-aof-rewrite-min-size, it will rewrite the AOF.
    # --maxmemory: The maximum amount of memory Redis can use. If the limit is reached, Redis will start to evict keys according to the policy set by maxmemory-policy.
    # --maxmemory-policy allkeys-lru: This is the default policy. It will evict the least recently used keys first, regardless of their type.
    # --maxclients: Limits the number of simultaneous connections to Redis.
    command: "redis-server --appendonly yes --auto-aof-rewrite-percentage ${REDIS_AOF_REWRITE_PERCENTAGE?Variable not set} --auto-aof-rewrite-min-size ${REDIS_AOF_REWRITE_MINIMUM_SIZE?Variable not set} --maxmemory ${REDIS_MAXIMUM_MEMORY?Variable not set} --maxmemory-policy allkeys-lru --maxclients ${REDIS_MAXIMUM_CLIENTS?Variable not set} --requirepass ${REDIS_PASSWORD?Variable not set} --port ${REDIS_PORT?Variable not set}"
    restart: "unless-stopped"
    networks:
      - "internal"
    ports:
      - "${REDIS_PORT?Variable not set}:${REDIS_PORT?Variable not set}"
    volumes:
      - "redis:/data"
    labels:
      - "traefik.enable=false"
